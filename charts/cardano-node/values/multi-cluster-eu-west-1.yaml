# Multi-Cluster Block Producer - Secondary Cluster (EU-West-1)
# This configuration deploys a SECONDARY cluster in a multi-region setup
# Priority 2 means this cluster only forges if the primary (US-East-1) is unhealthy

# ===========================================
# REPLICA CONFIGURATION
# ===========================================
replicaCount: 2  # Can use fewer replicas for secondary

# ===========================================
# CARDANO NODE CONFIGURATION
# ===========================================
cardanoNode:
  network: "mainnet"
  magic: "764824073"
  
  # Block producer mode
  blockProducer: true
  startAsNonProducing: true
  
  # Disable Mithril for production
  mithril:
    enabled: false
    restoreSnapshot: false

# ===========================================
# FORGE MANAGER V2.0 CONFIGURATION
# ===========================================
forgeManager:
  enabled: true
  
  # Production settings
  metricsPort: 8000
  socketWaitTimeout: 120
  sleepInterval: 10
  logLevel: "INFO"
  
  # ===========================================
  # MULTI-TENANT CONFIGURATION (REQUIRED)
  # ===========================================
  # IMPORTANT: Must match primary cluster exactly
  multiTenant:
    enabled: true
    pool:
      id: "pool1abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmno"  # SAME as primary
      idHex: ""
      name: "My Cardano Pool"  # SAME as primary
      ticker: "MYPOOL"  # SAME as primary
    
    application:
      type: "block-producer"
      environment: "production"
  
  # ===========================================
  # CLUSTER MANAGEMENT (MULTI-CLUSTER)
  # ===========================================
  clusterManagement:
    enabled: true
    
    # Region configuration (DIFFERENT from primary)
    region: "eu-west-1"
    
    # Priority (2 = lower than primary, this is secondary/failover)
    priority: 2
    
    # Forge state
    forgeState: "Priority-based"
    
    # Health check configuration
    healthCheck:
      enabled: true
      endpoint: "https://monitoring.example.com/api/health/cardano/eu-west-1"  # Different endpoint
      interval: 30
      timeout: 10
      failureThreshold: 3
      headers: {}
    
    # Manual override (for maintenance)
    override:
      enabled: false
      reason: ""
      expiresAt: ""

# ===========================================
# STORAGE CONFIGURATION
# ===========================================
persistence:
  enabled: true
  size: 400Gi
  # storageClass: "fast-ssd"  # Adjust for your cloud provider

# ===========================================
# RESOURCE CONFIGURATION
# ===========================================
# Can use slightly lower resources for secondary
resources:
  cardanoNode:
    limits:
      cpu: 4000m
      memory: 20Gi
    requests:
      cpu: 1500m
      memory: 16Gi
  
  forgeManager:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi

# ===========================================
# SERVICE CONFIGURATION
# ===========================================
service:
  p2p:
    type: LoadBalancer
    annotations:
      # Adjust for your cloud provider (this is AWS example)
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

# ===========================================
# MONITORING
# ===========================================
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    labels:
      release: prometheus
      cluster: eu-west-1

# ===========================================
# POD SCHEDULING
# ===========================================
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - cardano-node
          topologyKey: kubernetes.io/hostname

# ===========================================
# POD LABELS FOR MONITORING
# ===========================================
podLabels:
  cluster: "eu-west-1"
  region: "eu-west"
  priority: "secondary"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "12798"
  prometheus.io/path: "/metrics"

# ===========================================
# DEPLOYMENT INSTRUCTIONS
# ===========================================
# IMPORTANT: Deploy this AFTER the primary cluster is running
#
# 1. Install CRDs in EU cluster:
#    helm install cardano-forge-crds charts/cardano-forge-crds \
#      --namespace cardano-system --create-namespace
#
# 2. Create namespace:
#    kubectl create namespace cardano-mainnet
#
# 3. Create secrets (SAME keys as primary):
#    kubectl create secret generic cardano-forging-keys \
#      --from-file=kes.skey=path/to/kes.skey \
#      --from-file=vrf.skey=path/to/vrf.skey \
#      --from-file=node.cert=path/to/node.cert \
#      --namespace cardano-mainnet
#
# 4. Deploy secondary cluster:
#    helm install cardano-bp-eu-west-1 charts/cardano-node \
#      --namespace cardano-mainnet \
#      -f values/multi-cluster-eu-west-1.yaml
#
# 5. Verify both clusters can see each other:
#    # In US-East-1 cluster:
#    kubectl get cardanoforgeclusters -n cardano-mainnet
#    # Should see BOTH mainnet-pool1abc-us-east-1 AND mainnet-pool1abc-eu-west-1
#    
#    # In EU-West-1 cluster:
#    kubectl get cardanoforgeclusters -n cardano-mainnet
#    # Should also see BOTH clusters
#
# 6. Verify primary is forging:
#    kubectl get cardanoforgeclusters -o custom-columns='NAME:.metadata.name,STATE:.status.effectiveState,PRIORITY:.status.effectivePriority,FORGING:.status.forgingEnabled'
#    # US-East-1 should show FORGING=true, EU-West-1 should show FORGING=false
#
# 7. Test failover (optional):
#    # Temporarily disable primary for maintenance:
#    kubectl patch cardanoforgeCluster mainnet-pool1abc-us-east-1 \
#      --type='merge' \
#      -p='{"spec":{"forgeState":"Disabled"}}' \
#      -n cardano-mainnet
#    
#    # Watch EU cluster take over:
#    kubectl get cardanoforgeclusters -w -n cardano-mainnet
#    
#    # Re-enable primary:
#    kubectl patch cardanoforgeCluster mainnet-pool1abc-us-east-1 \
#      --type='merge' \
#      -p='{"spec":{"forgeState":"Priority-based"}}' \
#      -n cardano-mainnet
