# Relay Node Configuration
# This configuration deploys a simple Cardano relay node
# No forge manager, no block production - just relay functionality

# ===========================================
# REPLICA CONFIGURATION
# ===========================================
replicaCount: 1  # Single replica is sufficient for relay

# ===========================================
# CARDANO NODE CONFIGURATION
# ===========================================
cardanoNode:
  network: "mainnet"
  magic: "764824073"
  
  # Relay node mode (NOT a block producer)
  blockProducer: false
  startAsNonProducing: false  # Not applicable for relays
  
  # Enable Mithril snapshot for fast sync
  mithril:
    enabled: true
    restoreSnapshot: true
    aggregatorEndpoint: "https://aggregator.release-mainnet.api.mithril.network/aggregator"
    genesisVerificationKey: "5b3139312c36362c3134302c3138352c3133382c31312c3233372c3230372c3235302c3134342c32372c322c3138382c33302c31322c38312c3135352c3230342c31302c3137392c37352c32332c3133382c3139362c3231372c352c31342c32302c35372c37392c33392c3137365d"

# ===========================================
# FORGE MANAGER CONFIGURATION
# ===========================================
forgeManager:
  enabled: false  # NOT needed for relay nodes

# ===========================================
# STORAGE CONFIGURATION
# ===========================================
persistence:
  enabled: true
  size: 200Gi  # Relays need less storage than block producers
  # storageClass: "standard"

# ===========================================
# RESOURCE CONFIGURATION
# ===========================================
# Relays can use fewer resources than block producers
resources:
  cardanoNode:
    limits:
      cpu: 2000m
      memory: 8Gi
    requests:
      cpu: 1000m
      memory: 4Gi

# ===========================================
# SERVICE CONFIGURATION
# ===========================================
service:
  p2p:
    type: LoadBalancer  # External access for P2P
    annotations: {}

# ===========================================
# MONITORING
# ===========================================
monitoring:
  enabled: true
  serviceMonitor:
    enabled: false  # Set to true if using Prometheus Operator

# ===========================================
# DEPLOYMENT INSTRUCTIONS
# ===========================================
# 1. Install CRDs (not strictly necessary for relays, but harmless):
#    helm install cardano-forge-crds charts/cardano-forge-crds \
#      --namespace cardano-system --create-namespace
#
# 2. Deploy relay node:
#    helm install cardano-relay charts/cardano-node \
#      --namespace cardano-relays \
#      --create-namespace \
#      -f values/relay-node.yaml
#
# 3. Verify deployment:
#    kubectl get pods -n cardano-relays
#    kubectl logs -f -l app.kubernetes.io/name=cardano-node -c cardano-node -n cardano-relays
#
# 4. Get LoadBalancer IP:
#    kubectl get svc -n cardano-relays
#
# 5. Check node sync status:
#    kubectl exec -it cardano-relay-0 -n cardano-relays -- \
#      cardano-cli query tip --mainnet --socket-path /ipc/node.socket
