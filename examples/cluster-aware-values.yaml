# Example Helm values for enabling cluster-wide forge management
# This extends the existing cardano-node Helm chart with cluster management features

# Existing cardano-node configuration (unchanged)
cardanoNode:
  network: "preview"
  magic: "2"
  blockProducer: true
  
  # Enable Mithril snapshot for faster initial sync
  mithril:
    enabled: true
    restoreSnapshot: "true"
    aggregatorEndpoint: "https://aggregator.pre-release-preview.api.mithril.network/aggregator"
    genesisVerificationKey: "5b3132372c37332c3132342c3136312c362c3133372c3133312c3231332c3230372c3131372c3139382c38352c3137362c3139392c3136322c3234312c36382c3132332c3131392c3134352c31332c3233322c3234332c34392c3232392c322c3234392c3230352c3230352c33392c3233352c34345d"

# Forge Manager - Extended with cluster management
forgeManager:
  # Basic settings (unchanged)
  metricsPort: 8000
  logLevel: "INFO"
  socketWaitTimeout: 120
  sleepInterval: 10
  
  # NEW: Cluster-wide management settings
  clusterManagement:
    enabled: true  # Enable cluster-wide forge coordination
    clusterIdentifier: "us-east-1-prod"  # Unique cluster ID
    region: "us-east-1"  # Geographic region
    environment: "production"  # Environment classification
    priority: 1  # Cluster priority (1=highest, 999=lowest)
    
    # Health check configuration for automated failover
    healthCheck:
      enabled: true
      endpoint: "http://monitoring.example.com/health/cluster"
      interval: 30  # seconds
  
  # CRD configuration (unchanged)
  crd:
    install: true
    createInstance: true
    spec:
      poolId: "pool1abcdef123456789..."  # YOUR ACTUAL POOL ID HERE
      enabled: true
      description: "US East Production Cluster"
      network: "preview"
  
  # NEW: Install cluster management CRD
  clusterCrd:
    install: true  # Install CardanoForgeCluster CRD
    createInstance: true  # Create instance for this cluster
    spec:
      forgeState: "Priority-based"  # Enabled | Disabled | Priority-based
      priority: 1  # Should match clusterManagement.priority
      region: "us-east-1"
      environment: "production"

# Environment variables for the forge manager container
env:
  # Existing environment variables (unchanged)
  - name: NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: POD_NAME  
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  
  # NEW: Cluster management environment variables
  - name: ENABLE_CLUSTER_MANAGEMENT
    value: "true"
  - name: CLUSTER_IDENTIFIER
    value: "us-east-1-prod"
  - name: CLUSTER_REGION
    value: "us-east-1"
  - name: CLUSTER_ENVIRONMENT
    value: "production"
  - name: CLUSTER_PRIORITY
    value: "1"
  - name: HEALTH_CHECK_ENDPOINT
    value: "http://monitoring.example.com/health/cluster"
  - name: HEALTH_CHECK_INTERVAL
    value: "30"

# Resources (unchanged but may need adjustment for cluster management overhead)
resources:
  forgeManager:
    limits:
      cpu: 500m      # Slightly increased for cluster management
      memory: 1Gi    # Slightly increased for cluster management  
    requests:
      cpu: 100m
      memory: 256Mi

# RBAC - Extended permissions for cluster management
rbac:
  create: true
  # Additional cluster-wide permissions will be automatically included
  # when cluster management is enabled

# Service configuration for metrics (unchanged)
service:
  forgeManager:
    enabled: true
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8000"

# NEW: Monitoring configuration for cluster-wide metrics
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      component: "block-producer-cluster"
  
  # Prometheus rules for cluster-wide alerting
  prometheusRules:
    enabled: true
    rules:
      # Alert if multiple clusters are forging simultaneously
      - alert: CardanoMultipleClusterForging
        expr: sum(cardano_cluster_forge_enabled) > 1
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Multiple Cardano clusters are forging blocks"
          description: "{{ $value }} clusters are currently enabled for forging. Only one cluster should forge at a time."
      
      # Alert if no clusters are forging
      - alert: CardanoNoClusterForging  
        expr: sum(cardano_cluster_forge_enabled) == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "No Cardano clusters are forging blocks"
          description: "No clusters are currently enabled for forging. Block production may be stopped."

---
# Example values for a secondary cluster (us-west-2)
# Use this as a template for additional regions

# Same as above but with different cluster settings:
forgeManager:
  clusterManagement:
    enabled: true
    clusterIdentifier: "us-west-2-prod"  # Different cluster ID
    region: "us-west-2"                  # Different region
    environment: "production"
    priority: 2                          # Lower priority (backup)
    
    healthCheck:
      enabled: true
      endpoint: "http://monitoring.example.com/health/us-west-2"
      interval: 30

env:
  # Update cluster-specific environment variables
  - name: CLUSTER_IDENTIFIER
    value: "us-west-2-prod"
  - name: CLUSTER_REGION  
    value: "us-west-2"
  - name: CLUSTER_PRIORITY
    value: "2"
  - name: HEALTH_CHECK_ENDPOINT
    value: "http://monitoring.example.com/health/us-west-2"