# Helm Values for Multi-Tenant Cardano Forge Manager
# This configuration supports multiple pools across different networks

# Global configuration
global:
  namespace: spo-operations
  region: us-east-1
  forgeManagerImage: cardano-forge-manager:latest
  cardanoNodeImage: inputoutput/cardano-node:8.9.0
  
# Multi-tenant pool configurations
pools:
  # Primary mainnet pool
  - name: primary-mainnet
    enabled: true
    network: mainnet
    poolId: pool1abcd...xyz
    poolIdHex: abcd...xyz
    poolName: "Primary Stake Pool"
    poolTicker: "PRIME"
    networkMagic: 764824073
    applicationType: block-producer
    
    # Deployment configuration
    replicas: 3
    priority: 1  # Highest priority
    
    # Resource configuration
    resources:
      cardanoNode:
        requests:
          memory: 4Gi
          cpu: 1000m
        limits:
          memory: 8Gi
          cpu: 2000m
      forgeManager:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 200m
    
    # Storage configuration
    storage:
      size: 100Gi
      storageClass: fast-ssd
    
    # Health check configuration
    healthCheck:
      enabled: true
      endpoint: "http://prometheus:9090/api/v1/query?query=up{job='cardano-node',network='mainnet',pool_id='pool1abcd'}"
      interval: 30
    
    # Secret configuration
    secrets:
      name: mainnet-pool1abcd-credentials
      kesKey: kes.skey
      vrfKey: vrf.skey
      opCert: node.cert
    
    # Network configuration
    ports:
      cardanoNode: 3000
      metrics: 8000
    
    # ConfigMap references
    configMaps:
      cardanoConfig: mainnet-cardano-config

  # Secondary mainnet pool
  - name: secondary-mainnet
    enabled: true
    network: mainnet
    poolId: pool1efgh...xyz
    poolIdHex: efgh...xyz
    poolName: "Secondary Stake Pool"
    poolTicker: "SECOND"
    networkMagic: 764824073
    applicationType: block-producer
    
    # Deployment configuration
    replicas: 3
    priority: 2  # Lower priority than primary
    
    # Resource configuration (smaller for secondary)
    resources:
      cardanoNode:
        requests:
          memory: 3Gi
          cpu: 750m
        limits:
          memory: 6Gi
          cpu: 1500m
      forgeManager:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 200m
    
    # Storage configuration
    storage:
      size: 100Gi
      storageClass: fast-ssd
    
    # Health check configuration
    healthCheck:
      enabled: true
      endpoint: "http://prometheus:9090/api/v1/query?query=up{job='cardano-node',network='mainnet',pool_id='pool1efgh'}"
      interval: 30
    
    # Secret configuration
    secrets:
      name: mainnet-pool1efgh-credentials
      kesKey: kes.skey
      vrfKey: vrf.skey
      opCert: node.cert
    
    # Network configuration
    ports:
      cardanoNode: 3000
      metrics: 8000
    
    # ConfigMap references
    configMaps:
      cardanoConfig: mainnet-cardano-config

  # Preprod testing pool (same pool ID as primary, different network)
  - name: primary-preprod
    enabled: true
    network: preprod
    poolId: pool1abcd...xyz  # Same pool ID as primary mainnet
    poolIdHex: abcd...xyz
    poolName: "Primary Stake Pool (Testing)"
    poolTicker: "PRIME"
    networkMagic: 1
    applicationType: block-producer
    
    # Deployment configuration (smaller for testing)
    replicas: 1  # Single replica for testing
    priority: 1  # Same priority as mainnet (but different network)
    
    # Resource configuration (smaller for testing)
    resources:
      cardanoNode:
        requests:
          memory: 2Gi
          cpu: 500m
        limits:
          memory: 4Gi
          cpu: 1000m
      forgeManager:
        requests:
          memory: 128Mi
          cpu: 50m
        limits:
          memory: 256Mi
          cpu: 100m
    
    # Storage configuration (smaller for testing)
    storage:
      size: 50Gi
      storageClass: standard
    
    # Health check configuration
    healthCheck:
      enabled: true
      endpoint: "http://prometheus:9090/api/v1/query?query=up{job='cardano-node',network='preprod',pool_id='pool1abcd'}"
      interval: 60  # Less frequent for testing
    
    # Secret configuration (different secrets for testing)
    secrets:
      name: preprod-pool1abcd-credentials
      kesKey: kes.skey
      vrfKey: vrf.skey
      opCert: node.cert
    
    # Network configuration
    ports:
      cardanoNode: 3000
      metrics: 8000
    
    # ConfigMap references
    configMaps:
      cardanoConfig: preprod-cardano-config

  # Preview development pool
  - name: primary-preview
    enabled: false  # Disabled by default
    network: preview
    poolId: pool1abcd...xyz  # Same pool ID for testing
    poolIdHex: abcd...xyz
    poolName: "Primary Stake Pool (Development)"
    poolTicker: "PRIME"
    networkMagic: 2
    applicationType: block-producer
    
    # Deployment configuration (minimal for development)
    replicas: 1
    priority: 1
    
    # Resource configuration (minimal)
    resources:
      cardanoNode:
        requests:
          memory: 1Gi
          cpu: 250m
        limits:
          memory: 2Gi
          cpu: 500m
      forgeManager:
        requests:
          memory: 128Mi
          cpu: 50m
        limits:
          memory: 256Mi
          cpu: 100m
    
    # Storage configuration (minimal)
    storage:
      size: 20Gi
      storageClass: standard
    
    # Health check configuration
    healthCheck:
      enabled: false  # Disabled for development
    
    # Secret configuration
    secrets:
      name: preview-pool1abcd-credentials
      kesKey: kes.skey
      vrfKey: vrf.skey
      opCert: node.cert
    
    # Network configuration
    ports:
      cardanoNode: 3000
      metrics: 8000
    
    # ConfigMap references
    configMaps:
      cardanoConfig: preview-cardano-config

# Cluster management configuration
clusterManagement:
  enabled: true
  # CRD configuration
  crd:
    create: true
    group: cardano.io
    version: v1
  
  # RBAC configuration
  rbac:
    create: true
    serviceAccountName: cardano-forge-manager
  
  # Health check defaults
  healthCheck:
    defaultInterval: 30
    defaultTimeout: 10
    defaultFailureThreshold: 3

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      path: /metrics
      labels:
        app: cardano-forge-manager
  
  grafana:
    dashboards:
      enabled: true
      # Multi-tenant dashboard configuration
      multiTenant:
        enabled: true
        networkFiltering: true
        poolFiltering: true

# Network-specific configurations
networks:
  mainnet:
    magic: 764824073
    era: conway
    configMap: mainnet-cardano-config
    genesis:
      shelley: mainnet-shelley-genesis.json
      byron: mainnet-byron-genesis.json
      alonzo: mainnet-alonzo-genesis.json
      conway: mainnet-conway-genesis.json
  
  preprod:
    magic: 1
    era: conway
    configMap: preprod-cardano-config
    genesis:
      shelley: preprod-shelley-genesis.json
      byron: preprod-byron-genesis.json
      alonzo: preprod-alonzo-genesis.json
      conway: preprod-conway-genesis.json
  
  preview:
    magic: 2
    era: conway
    configMap: preview-cardano-config
    genesis:
      shelley: preview-shelley-genesis.json
      byron: preview-byron-genesis.json
      alonzo: preview-alonzo-genesis.json
      conway: preview-conway-genesis.json

# Services configuration
services:
  # Enable individual services per pool
  createPerPool: true
  type: ClusterIP
  
  # Service annotations
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"

# Storage classes for different environments
storageClasses:
  production: fast-ssd
  testing: standard
  development: standard

# Security configuration
security:
  # Pod security context
  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  
  # Container security context
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000

# Backup configuration (pool-specific)
backup:
  enabled: false
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: "30d"
  storage:
    class: standard
    size: 10Gi

# Example usage in Helm:
# helm install my-spo-infrastructure ./cardano-forge-manager \
#   --namespace spo-operations \
#   --create-namespace \
#   --values multi-tenant-helm-values.yaml

# To enable/disable specific pools:
# helm upgrade my-spo-infrastructure ./cardano-forge-manager \
#   --set pools[2].enabled=true \  # Enable preview pool
#   --set pools[0].priority=2      # Change primary pool priority