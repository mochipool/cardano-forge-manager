---
apiVersion: v1
kind: Namespace
metadata:
  name: cardano-test
---
# Dummy forging key
apiVersion: v1
kind: Secret
metadata:
  name: cardano-forging-secret
  namespace: cardano-test
type: Opaque
stringData:
  forging.skey: "dummy-key"
---
# ServiceAccount for RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cardano-forge-sa
  namespace: cardano-test
---
# RBAC for lease management
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cardano-lease-role
  namespace: cardano-test
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cardano-lease-rolebinding
  namespace: cardano-test
subjects:
- kind: ServiceAccount
  name: cardano-forge-sa
  namespace: cardano-test
roleRef:
  kind: Role
  name: cardano-lease-role
  apiGroup: rbac.authorization.k8s.io
---
# RBAC for CRD management
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cardano-leader-role
  namespace: cardano-test
rules:
  - apiGroups: ["cardano.io"]
    resources: ["cardanoleaders"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["cardano.io"]
    resources: ["cardanoleaders/status"]
    verbs: ["get", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cardano-leader-rolebinding
  namespace: cardano-test
subjects:
  - kind: ServiceAccount
    name: cardano-forge-sa
    namespace: cardano-test
roleRef:
  kind: Role
  name: cardano-leader-role
  apiGroup: rbac.authorization.k8s.io
---
# CR instance to hold leader status
apiVersion: cardano.io/v1
kind: CardanoLeader
metadata:
  name: cardano-leader
  namespace: cardano-test
---
# Dummy Deployment to test sidecar script
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cardano-forge-manager
  namespace: cardano-test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cardano-forge-manager
  template:
    metadata:
      labels:
        app: cardano-forge-manager
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
        fsGroupChangePolicy: Always
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: cardano-forge-sa
      initContainers:
        - name: create-fake-socket
          image: busybox:1.36
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -c
            - mkdir -p /ipc && touch /ipc/node.socket
          volumeMounts:
            - name: node-socket
              mountPath: /ipc
      containers:
        - name: forge-manager
          image:  ttl.sh/7ded1b80-34ff-42a1-8148-69e7832af254:1h
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_SOCKET
              value: /ipc/node.socket
            - name: SOURCE_KES_KEY
              value: /secrets/kes.skey
            - name: SOURCE_VRF_KEY
              value: /secrets/vrf.skey
            - name: SOURCE_OP_CERT
              value: /secrets/node.cert
            - name: TARGET_KES_KEY
              value: /opt/cardano/secrets/kes.skey
            - name: TARGET_VRF_KEY
              value: /opt/cardano/secrets/vrf.skey
            - name: TARGET_OP_CERT
              value: /opt/cardano/secrets/node.cert
            - name: LEASE_NAME
              value: cardano-node-leader
            - name: CRD_GROUP
              value: cardano.io
            - name: CRD_VERSION
              value: v1
            - name: CRD_PLURAL
              value: cardanoleaders
            - name: CRD_NAME
              value: cardano-leader
            - name: METRICS_PORT
              value: "8000"
            - name: SOCKET_WAIT_TIMEOUT
              value: "60"
            - name: SLEEP_INTERVAL
              value: "5"
            - name: LOG_LEVEL
              value: "INFO"
            - name: DISABLE_SOCKET_CHECK
              value: "false"
            - name: START_AS_NON_PRODUCING
              value: "true"
          volumeMounts:
            - name: forging-secret
              mountPath: /secrets/forging
              readOnly: true
            - name: node-socket
              mountPath: /ipc
          ports:
            - containerPort: 8000
              name: metrics
      volumes:
        - name: forging-secret
          secret:
            secretName: cardano-forging-secret
        - name: node-socket
          emptyDir: {}
---
# Service to scrape metrics
apiVersion: v1
kind: Service
metadata:
  name: forge-metrics
  namespace: cardano-test
spec:
  selector:
    app: cardano-forge-manager
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
