---
# ClusterRole for CardanoForgeCluster CRD management
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cardano-forge-cluster-manager
  labels:
    app.kubernetes.io/name: cardano-forge-manager
    app.kubernetes.io/component: cluster-management
rules:
# CardanoForgeCluster CRD permissions
- apiGroups: ["cardano.io"]
  resources: ["cardanoforgeclusters"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["cardano.io"]
  resources: ["cardanoforgeclusters/status"]
  verbs: ["get", "update", "patch"]
# Existing CardanoLeader CRD permissions (for compatibility)
- apiGroups: ["cardano.io"]
  resources: ["cardanoleaders"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["cardano.io"]
  resources: ["cardanoleaders/status"]
  verbs: ["get", "update", "patch"]
# Lease management permissions (existing)
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "create", "update", "patch", "delete"]
# Pod information access for health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
  resourceNames: [] # Restricted to own pod via RBAC binding
# Events for logging important state changes
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]

---
# ClusterRoleBinding for forge manager service accounts
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cardano-forge-cluster-manager
  labels:
    app.kubernetes.io/name: cardano-forge-manager
    app.kubernetes.io/component: cluster-management
subjects:
# Default binding - update with actual service account names in deployment
- kind: ServiceAccount
  name: cardano-forge-manager
  namespace: default
roleRef:
  kind: ClusterRole
  name: cardano-forge-cluster-manager
  apiGroup: rbac.authorization.k8s.io

---
# Example namespace-specific binding for cardano-preview
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cardano-forge-cluster-manager-preview
  labels:
    app.kubernetes.io/name: cardano-forge-manager
    app.kubernetes.io/component: cluster-management
    app.kubernetes.io/environment: preview
subjects:
- kind: ServiceAccount
  name: cardano-bp-cardano-node  # Existing service account from helm chart
  namespace: cardano-preview
roleRef:
  kind: ClusterRole
  name: cardano-forge-cluster-manager
  apiGroup: rbac.authorization.k8s.io